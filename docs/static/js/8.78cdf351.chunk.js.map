{"version":3,"sources":["components/register/title/Title.js","components/register/link/LinkLogin.js","components/register/Register.js"],"names":["Container","styled","h1","Span","span","Title","Link","LinkLogin","to","div","bgReg","Form","form","Error","p","Label","PInput","label","Input","input","Submit","button","PZindex","a","Errors","ErrorServer","Left","Right","Register","history","useHistory","useForm","register","handleSubmit","errors","useFetch","fetchData","errorsRegister","error","fetching","useEffect","localStorage","getItem","push","onSubmit","data","url","body","email","trim","password","onSuccess","setItem","JSON","stringify","type","id","name","aria-invalid","ref","required","htmlFor","role","minLength","maxLength"],"mappings":"yfAGA,IAAMA,EAAYC,IAAOC,GAAV,KAUTC,EAAOF,IAAOG,KAAV,KAUKC,EARD,WACV,OACI,kBAACL,EAAD,KACI,kBAACG,EAAD,UADJ,Y,iVCbR,IAAMH,EAAYC,YAAOK,IAAPL,CAAH,KASTE,EAAOF,IAAOG,KAAV,KAWKG,EARG,WAChB,OACE,kBAAC,EAAD,CAAWC,GAAG,KACZ,kBAAC,EAAD,UADF,S,2mHCTJ,IAAMR,EAAYC,IAAOQ,IAAV,IAOWC,KAMpBC,EAAOV,IAAOW,KAAV,KAMJC,EAAQZ,IAAOa,EAAV,KAcLC,GARQd,IAAOQ,IAAV,KAQGR,IAAOQ,IAAV,MAMLO,EAASf,IAAOgB,MAAV,KAyBNC,EAAQjB,IAAOkB,MAAV,IAeGH,GAaRI,GALWnB,IAAOkB,MAAV,KAKClB,IAAOoB,OAAV,MAwCNC,GAPIrB,IAAOsB,EAAV,KAOStB,IAAOa,EAAV,MAIPU,EAASvB,IAAOQ,IAAV,KAKNgB,EAAcxB,IAAOa,EAAV,KAIXY,EAAOzB,IAAOQ,IAAV,KAQJkB,EAAQ1B,IAAOQ,IAAV,KA6EImB,UA1EE,WACf,IAAMC,EAAUC,cADK,EAEsBC,cAAnCC,EAFa,EAEbA,SAAUC,EAFG,EAEHA,aAAcC,EAFX,EAEWA,OAFX,EAGkCC,cAA/CC,EAHa,EAGbA,UAAkBC,EAHL,EAGFC,MAHE,EAGqBC,SAC1CC,qBAAU,WACcC,aAAaC,QAAQ,iBAEzCb,EAAQc,KAAK,gBAEd,IACH,IAAMC,EAAQ,uCAAG,WAAOC,GAAP,SAAAtB,EAAA,sEACTa,EAAU,CACdU,IAAK,gBACLC,KAAM,CAAEC,MAAOH,EAAKG,MAAMC,OAAQC,SAAUL,EAAKK,SAASD,QAC1DE,UAAW,SAACN,GACVJ,aAAaW,QAAQ,eAAgBC,KAAKC,UAAUT,IACpDhB,EAAQc,KAAK,iBANF,2CAAH,sDAUd,OACE,oCACE,kBAAC,EAAD,KACE,kBAACjB,EAAD,KACE,kBAAC,EAAD,MACA,kBAACf,EAAD,CAAMiC,SAAUX,EAAaW,IAC3B,kBAAC7B,EAAD,KACE,kBAACG,EAAD,CACEqC,KAAK,OACLC,GAAG,QACHC,KAAK,QACLC,eAAcxB,EAAOc,MAAQ,OAAS,QACtCW,IAAK3B,EAAS,CAAE4B,UAAU,MAE5B,kBAAC5C,EAAD,CAAQ6C,QAAQ,SACd,kBAACvC,EAAD,eAEDY,EAAOc,OAAS,kBAACnC,EAAD,CAAOiD,KAAK,SAAZ,2BAEnB,kBAAC/C,EAAD,KACE,kBAACG,EAAD,CACEqC,KAAK,WACLC,GAAG,OACHC,KAAK,WACLC,eAAcxB,EAAOgB,SAAW,OAAS,QACzCS,IAAK3B,EAAS,CAAE4B,UAAU,EAAMG,UAAW,EAAGC,UAAW,OAE3D,kBAAChD,EAAD,CAAQ6C,QAAQ,QACd,kBAACvC,EAAD,kBAEDY,EAAOgB,UAAqC,aAAzBhB,EAAOgB,SAASK,MAClC,kBAAC1C,EAAD,CAAOiD,KAAK,SAAZ,0BAED5B,EAAOgB,UAAqC,cAAzBhB,EAAOgB,SAASK,MAClC,kBAAC1C,EAAD,CAAOiD,KAAK,SAAZ,gBAED5B,EAAOgB,UAAqC,cAAzBhB,EAAOgB,SAASK,MAClC,kBAAC1C,EAAD,CAAOiD,KAAK,SAAZ,kBAIJ,kBAACtC,EAAD,KAASa,GAAkB,kBAACZ,EAAD,KAAcY,IACzC,kBAACjB,EAAD,KACE,kBAACE,EAAD,gBAEF,kBAAC,EAAD,QAGJ,kBAACK,EAAD","file":"static/js/8.78cdf351.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components'\n\nconst Container = styled.h1`\n  font-size: 3rem;\n  margin: 25px 0;\n  letter-spacing: 1px;\n  color: #F9B613;\n  @media (min-width: 768px) {\n    font-size: 5rem;\n    margin-bottom: 50px;\n  }\n`;\nconst Span = styled.span`\n  color: #72AC31;`;\nconst Title = () => {\n    return (\n        <Container>\n            <Span>R</Span>egister\n        </Container>\n    );\n};\n\nexport default Title;","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Container = styled(Link)`\n  font-size: 1.5rem;\n  color: #f9b613;\n  text-decoration: none;\n  @media (min-width: 768px) {\n    font-size: 3rem;\n    letter-spacing: 1px;\n  }\n`;\nconst Span = styled.span`\n  color: #72ac31;\n`;\nconst LinkLogin = () => {\n  return (\n    <Container to=\"/\">\n      <Span>L</Span>ogin\n    </Container>\n  );\n};\n\nexport default LinkLogin;\n","import React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport Title from './title/Title';\nimport bgReg from '../../img/bgReg.webp';\nimport LinkLogin from './link/LinkLogin';\nimport { useFetch } from '../../hooks/useFetch';\n\nconst Container = styled.div`\n  width: 100vw;\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  align-items: center;\n  justify-items: center;\n  background-image: url(${bgReg});\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: center;\n  background-size: cover;\n`;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 40vw;\n`;\nconst Error = styled.p`\n  color: red;\n  font-size: 1rem;\n  position: absolute;\n  top: 102%;\n`;\nconst Terms = styled.div`\n  align-self: start;\n  display: flex;\n  align-items: center;\n  font-size: 1.1rem;\n  margin: 30px 0;\n  position: relative;\n`;\nconst Label = styled.div`\n  position: relative;\n  width: 80%;\n  height: 80px;\n  margin-bottom: 50px;\n`;\nconst PInput = styled.label`\n  position: absolute;\n  top: 0;\n  left: 0;\n  font-size: 1.5rem;\n  height: 40px;\n  padding: 5px;\n  transition: opacity 0.8s ease;\n  opacity: 1;\n  overflow: hidden;\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 50%;\n    right: 0;\n    width: 100%;\n    height: 50%;\n    background-color: #f9b613;\n    opacity: 0.4;\n    z-index: 1;\n    transition: transform 1s ease;\n    transform: skew(40deg) rotate(15deg) translate(100%, 50%);\n  }\n`;\nconst Input = styled.input`\n  display: block;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  height: 40px;\n  border: none;\n  border-bottom: 2px solid #000;\n  outline: none;\n  font-size: 1.2rem;\n  padding-left: 5px;\n  transition: border 1s ease;\n  background: transparent;\n\n  &:focus + ${PInput}::after {\n    transform: skew(40deg) rotate(15deg) translate(0, 50%);\n  }\n\n  &:focus {\n    border-bottom: 2px solid #f9b613;\n  }\n`;\nconst Checkbox = styled.input`\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n`;\nconst Submit = styled.button`\n  width: 80%;\n  font-size: 1.8rem;\n  cursor: pointer;\n  padding: 7px 0;\n  outline: none;\n  color: #fff;\n  border: none;\n  border-radius: 3px;\n  background: transparent;\n  position: relative;\n  overflow: hidden;\n  margin-bottom: 15px;\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 200%;\n    height: 100%;\n    z-index: 1;\n    background: linear-gradient(#72ac31, #f9b613);\n    transition: transform 1s ease;\n  }\n\n  &:hover::after {\n    transform: translateX(-50%);\n  }\n\n  @media (min-width: 768px) {\n    width: 50%;\n  }\n`;\nconst A = styled.a`\n  text-decoration-line: underline;\n  text-decoration-style: solid;\n  text-decoration-color: #f9b613;\n  color: #f9b613;\n`;\n\nconst PZindex = styled.p`\n  position: relative;\n  z-index: 5;\n`;\nconst Errors = styled.div`\n  align-self: start;\n  display: flex;\n  flex-direction: column;\n`;\nconst ErrorServer = styled.p`\n  color: red;\n  font-size: 1rem;\n`;\nconst Left = styled.div`\n  width: 50%;\n  height: 60vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: transparent;\n`;\nconst Right = styled.div`\n  width: 100%;\n`;\nconst Register = () => {\n  const history = useHistory();\n  const { register, handleSubmit, errors } = useForm();\n  const { fetchData, error: errorsRegister, fetching } = useFetch();\n  useEffect(() => {\n    const secureStorage = localStorage.getItem('secure_token');\n    if (secureStorage) {\n      history.push('/dashboard');\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  const onSubmit = async (data) => {\n    await fetchData({\n      url: 'auth/register',\n      body: { email: data.email.trim(), password: data.password.trim() },\n      onSuccess: (data) => {\n        localStorage.setItem('secure_token', JSON.stringify(data));\n        history.push('/dashboard');\n      },\n    });\n  };\n  return (\n    <>\n      <Container>\n        <Left>\n          <Title />\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <Label>\n              <Input\n                type=\"text\"\n                id=\"email\"\n                name=\"email\"\n                aria-invalid={errors.email ? 'true' : 'false'}\n                ref={register({ required: true })}\n              />\n              <PInput htmlFor=\"email\">\n                <PZindex>Email</PZindex>\n              </PInput>\n              {errors.email && <Error role=\"alert\">This field is required</Error>}\n            </Label>\n            <Label>\n              <Input\n                type=\"password\"\n                id=\"pass\"\n                name=\"password\"\n                aria-invalid={errors.password ? 'true' : 'false'}\n                ref={register({ required: true, minLength: 6, maxLength: 20 })}\n              />\n              <PInput htmlFor=\"pass\">\n                <PZindex>Password</PZindex>\n              </PInput>\n              {errors.password && errors.password.type === 'required' && (\n                <Error role=\"alert\">This field is required</Error>\n              )}\n              {errors.password && errors.password.type === 'minLength' && (\n                <Error role=\"alert\">Min length 6</Error>\n              )}\n              {errors.password && errors.password.type === 'maxLength' && (\n                <Error role=\"alert\">Max length 20</Error>\n              )}\n            </Label>\n\n            <Errors>{errorsRegister && <ErrorServer>{errorsRegister}</ErrorServer>}</Errors>\n            <Submit>\n              <PZindex>Submit</PZindex>\n            </Submit>\n            <LinkLogin />\n          </Form>\n        </Left>\n        <Right></Right>\n      </Container>\n    </>\n  );\n};\n\nexport default Register;\n"],"sourceRoot":""}